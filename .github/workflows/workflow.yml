name: Continuous Integration and Delivery
on: [push, pull_request]
env:
  NODE_VERSION: 16.14.0
jobs:
  install:
    name: 'Installing NPM modules'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Running npm ci (if node_modules not cached)'
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci
  lint:
    name: 'Linting'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run lint
  build-solace-message-client:
    name: 'Building solace-message-client'
    needs: install
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.solace-message-client-package-json.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Reading package.json version of solace-message-client'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/package-json@master
        id: solace-message-client-package-json
        with:
          path: projects/solace-message-client/package.json
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Building solace-message-client'
        run: npm run solace-message-client:build
      - name: 'Building API Documentation (TypeDoc)'
        run: npm run solace-message-client:typedoc
      - uses: actions/upload-artifact@v2
        with:
          name: solace-message-client
          path: dist/@solace-community/angular-solace-message-client
      - uses: actions/upload-artifact@v2
        with:
          name: solace-message-client-api
          path: dist/solace-message-client-api
  build-testing-app:
    name: 'Building Testing App'
    needs: build-solace-message-client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Downloading solace-message-client'
        uses: actions/download-artifact@v2
        with:
          name: solace-message-client
          path: dist/@solace-community/angular-solace-message-client
      - name: 'Building solace-message-client-testing-app'
        run: npm run solace-message-client-testing-app:build
      - uses: actions/upload-artifact@v2
        with:
          name: solace-message-client-testing-app
          path: dist/solace-message-client-testing-app/angular-solace-message-client/tryme
  test:
    name: 'Unit Testing'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run test:headless
  e2e:
    name: 'E2E Testing'
    needs: [build-testing-app]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Downloading solace-message-client-testing-app'
        uses: actions/download-artifact@v2
        with:
          name: solace-message-client-testing-app
          path: dist/solace-message-client-testing-app/angular-solace-message-client/tryme
      - run: npm run e2e:ci
  release-guard:
    name: 'Release Guard'
    if: github.ref == 'refs/heads/master'
    needs:
      - build-solace-message-client
      - build-testing-app
      - lint
      - test
      - e2e
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.tag-release-commit.outputs.is-release-commit }}
    steps:
      - uses: actions/checkout@v2
      - name: 'If release commit present, add release tag'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/tag-release-commit@master
        id: tag-release-commit
        with:
          release-commit-message-pattern: 'release\(solace-message-client\): v(.*)'
          expected-version: ${{ needs.build-solace-message-client.outputs.version }}
  deploy:
    name: 'Deploying TypeDoc and TryMe application to GitHub pages'
    if: ${{ needs.release-guard.outputs.should-release == 'true' }}
    needs: [ release-guard ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Downloading solace-message-client-testing-app'
        uses: actions/download-artifact@v2
        with:
          name: solace-message-client-testing-app
          path: dist/tryme
      - name: 'Downloading api'
        uses: actions/download-artifact@v2
        with:
          name: solace-message-client-api
          path: dist/api
      - name: 'Deploying testing app to GitHub pages'
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: dist
          clean: true
  release:
    name: 'Releasing @solace-community/angular-solace-message-client'
    if: ${{ needs.release-guard.outputs.should-release == 'true' }}
    needs: [ release-guard ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Downloading dist/solace-message-client'
        uses: actions/download-artifact@v2
        with:
          name: solace-message-client
          path: dist/@solace-community/angular-solace-message-client
      - name: 'Publishing @solace-community/angular-solace-message-client to NPM'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/npm-publish@master
        with:
          dist-folder: dist/@solace-community/angular-solace-message-client
          npm-token: ${{ secrets.NPM_PUBLISH_TOKEN }}
          dry-run: false
